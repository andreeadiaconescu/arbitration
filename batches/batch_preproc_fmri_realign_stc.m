%-----------------------------------------------------------------------
% Job saved on 04-Jan-2016 18:28:59 by cfg_util (rev $Rev: 6134 $)
% spm SPM - SPM12 (6225)
% cfg_basicio BasicIO - Unknown
%-----------------------------------------------------------------------
matlabbatch{1}.cfg_basicio.file_dir.dir_ops.cfg_named_dir.name = 'Subject Directory';
matlabbatch{1}.cfg_basicio.file_dir.dir_ops.cfg_named_dir.dirs = {{'/Users/kasperla/Documents/code/matlab/smoothing_trunk/WAGAD/test_0003'}};
matlabbatch{2}.cfg_basicio.file_dir.file_ops.cfg_named_file.name = 'Functional Images';
matlabbatch{2}.cfg_basicio.file_dir.file_ops.cfg_named_file.files = {
                                                                     {
                                                                     '/Users/kasperla/Documents/code/matlab/smoothing_trunk/WAGAD/test_0003/funct/1/funct_run1.nii'
                                                                     '/Users/kasperla/Documents/code/matlab/smoothing_trunk/WAGAD/test_0003/funct/2/funct_run2.nii'
                                                                     }
                                                                     }';
matlabbatch{3}.cfg_basicio.file_dir.file_ops.cfg_named_file.name = 'Structural Image';
matlabbatch{3}.cfg_basicio.file_dir.file_ops.cfg_named_file.files = {{'/Users/kasperla/Documents/code/matlab/smoothing_trunk/WAGAD/test_0003/struct/struct.nii'}};
matlabbatch{4}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.parent(1) = cfg_dep('Named Directory Selector: Subject Directory(1)', substruct('.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dirs', '{}',{1}));
matlabbatch{4}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.name = 'preproc_realign_stc';
matlabbatch{5}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.parent(1) = cfg_dep('Make Directory: Make Directory ''preproc_realign_stc''', substruct('.','val', '{}',{4}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{5}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.name = 'funct';
matlabbatch{6}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.parent(1) = cfg_dep('Make Directory: Make Directory ''preproc_realign_stc''', substruct('.','val', '{}',{4}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{6}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.name = 'struct';
matlabbatch{7}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.parent(1) = cfg_dep('Make Directory: Make Directory ''preproc_realign_stc''', substruct('.','val', '{}',{4}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{7}.cfg_basicio.file_dir.dir_ops.cfg_mkdir.name = 'report_preproc_quality';
matlabbatch{8}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep('Named File Selector: Functional Images(1) - Files', substruct('.','val', '{}',{2}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{8}.cfg_basicio.file_dir.file_ops.file_move.action.copyto(1) = cfg_dep('Make Directory: Make Directory ''funct''', substruct('.','val', '{}',{5}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{9}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep('Named File Selector: Structural Image(1) - Files', substruct('.','val', '{}',{3}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{9}.cfg_basicio.file_dir.file_ops.file_move.action.copyto(1) = cfg_dep('Make Directory: Make Directory ''struct''', substruct('.','val', '{}',{6}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{10}.spm.util.exp_frames.files(1) = cfg_dep('Move/Delete Files: Moved/Copied Files', substruct('.','val', '{}',{8}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{10}.spm.util.exp_frames.frames = Inf;
matlabbatch{11}.spm.spatial.realignunwarp.data.scans(1) = cfg_dep('Expand image frames: Expanded filename list.', substruct('.','val', '{}',{10}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{11}.spm.spatial.realignunwarp.data.pmscan = '';
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.quality = 0.9;
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.sep = 4;
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.fwhm = 5;
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.rtm = 0;
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.einterp = 4;
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.ewrap = [0 0 0];
matlabbatch{11}.spm.spatial.realignunwarp.eoptions.weight = '';
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.basfcn = [12 12];
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.regorder = 1;
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.lambda = 100000;
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.jm = 0;
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.fot = [4 5];
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.sot = [];
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.uwfwhm = 4;
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.rem = 1;
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.noi = 2;
matlabbatch{11}.spm.spatial.realignunwarp.uweoptions.expround = 'Average';
matlabbatch{11}.spm.spatial.realignunwarp.uwroptions.uwwhich = [2 1];
matlabbatch{11}.spm.spatial.realignunwarp.uwroptions.rinterp = 4;
matlabbatch{11}.spm.spatial.realignunwarp.uwroptions.wrap = [0 0 0];
matlabbatch{11}.spm.spatial.realignunwarp.uwroptions.mask = 1;
matlabbatch{11}.spm.spatial.realignunwarp.uwroptions.prefix = 'u';
matlabbatch{12}.spm.temporal.st.scans{1}(1) = cfg_dep('Realign & Unwarp: Unwarped Images (Sess 1)', substruct('.','val', '{}',{11}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','sess', '()',{1}, '.','uwrfiles'));
matlabbatch{12}.spm.temporal.st.nslices = 33;
matlabbatch{12}.spm.temporal.st.tr = 2.65781;
matlabbatch{12}.spm.temporal.st.ta = 2.57726060606061;
matlabbatch{12}.spm.temporal.st.so = [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33];
matlabbatch{12}.spm.temporal.st.refslice = 17;
matlabbatch{12}.spm.temporal.st.prefix = 'a';
matlabbatch{13}.spm.util.imcalc.input(1) = cfg_dep('Slice Timing: Slice Timing Corr. Images (Sess 1)', substruct('.','val', '{}',{12}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{13}.spm.util.imcalc.output = 'meanaufunct';
matlabbatch{13}.spm.util.imcalc.outdir(1) = cfg_dep('Make Directory: Make Directory ''funct''', substruct('.','val', '{}',{5}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{13}.spm.util.imcalc.expression = 'mean(X)';
matlabbatch{13}.spm.util.imcalc.var = struct('name', {}, 'value', {});
matlabbatch{13}.spm.util.imcalc.options.dmtx = 1;
matlabbatch{13}.spm.util.imcalc.options.mask = 0;
matlabbatch{13}.spm.util.imcalc.options.interp = -7;
matlabbatch{13}.spm.util.imcalc.options.dtype = 4;
matlabbatch{14}.spm.spatial.preproc.channel.vols(1) = cfg_dep('Move/Delete Files: Moved/Copied Files', substruct('.','val', '{}',{9}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{14}.spm.spatial.preproc.channel.biasreg = 0.001;
matlabbatch{14}.spm.spatial.preproc.channel.biasfwhm = 60;
matlabbatch{14}.spm.spatial.preproc.channel.write = [0 1];
matlabbatch{14}.spm.spatial.preproc.tissue(1).tpm = {'/Users/kasperla/Documents/code/matlab/spm12/tpm/TPM.nii,1'};
matlabbatch{14}.spm.spatial.preproc.tissue(1).ngaus = 1;
matlabbatch{14}.spm.spatial.preproc.tissue(1).native = [1 0];
matlabbatch{14}.spm.spatial.preproc.tissue(1).warped = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(2).tpm = {'/Users/kasperla/Documents/code/matlab/spm12/tpm/TPM.nii,2'};
matlabbatch{14}.spm.spatial.preproc.tissue(2).ngaus = 1;
matlabbatch{14}.spm.spatial.preproc.tissue(2).native = [1 0];
matlabbatch{14}.spm.spatial.preproc.tissue(2).warped = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(3).tpm = {'/Users/kasperla/Documents/code/matlab/spm12/tpm/TPM.nii,3'};
matlabbatch{14}.spm.spatial.preproc.tissue(3).ngaus = 2;
matlabbatch{14}.spm.spatial.preproc.tissue(3).native = [1 0];
matlabbatch{14}.spm.spatial.preproc.tissue(3).warped = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(4).tpm = {'/Users/kasperla/Documents/code/matlab/spm12/tpm/TPM.nii,4'};
matlabbatch{14}.spm.spatial.preproc.tissue(4).ngaus = 3;
matlabbatch{14}.spm.spatial.preproc.tissue(4).native = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(4).warped = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(5).tpm = {'/Users/kasperla/Documents/code/matlab/spm12/tpm/TPM.nii,5'};
matlabbatch{14}.spm.spatial.preproc.tissue(5).ngaus = 4;
matlabbatch{14}.spm.spatial.preproc.tissue(5).native = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(5).warped = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(6).tpm = {'/Users/kasperla/Documents/code/matlab/spm12/tpm/TPM.nii,6'};
matlabbatch{14}.spm.spatial.preproc.tissue(6).ngaus = 2;
matlabbatch{14}.spm.spatial.preproc.tissue(6).native = [0 0];
matlabbatch{14}.spm.spatial.preproc.tissue(6).warped = [0 0];
matlabbatch{14}.spm.spatial.preproc.warp.mrf = 1;
matlabbatch{14}.spm.spatial.preproc.warp.cleanup = 1;
matlabbatch{14}.spm.spatial.preproc.warp.reg = [0 0.001 0.5 0.05 0.2];
matlabbatch{14}.spm.spatial.preproc.warp.affreg = 'mni';
matlabbatch{14}.spm.spatial.preproc.warp.fwhm = 0;
matlabbatch{14}.spm.spatial.preproc.warp.samp = 3;
matlabbatch{14}.spm.spatial.preproc.warp.write = [0 1];
matlabbatch{15}.cfg_basicio.file_dir.cfg_fileparts.files(1) = cfg_dep('Segment: Bias Corrected (1)', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','channel', '()',{1}, '.','biascorr', '()',{':'}));
matlabbatch{16}.spm.util.imcalc.input(1) = cfg_dep('Segment: Bias Corrected (1)', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','channel', '()',{1}, '.','biascorr', '()',{':'}));
matlabbatch{16}.spm.util.imcalc.input(2) = cfg_dep('Segment: c1 Images', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','tiss', '()',{1}, '.','c', '()',{':'}));
matlabbatch{16}.spm.util.imcalc.input(3) = cfg_dep('Segment: c2 Images', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','tiss', '()',{2}, '.','c', '()',{':'}));
matlabbatch{16}.spm.util.imcalc.input(4) = cfg_dep('Segment: c3 Images', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','tiss', '()',{3}, '.','c', '()',{':'}));
matlabbatch{16}.spm.util.imcalc.output = 'Brain';
matlabbatch{16}.spm.util.imcalc.outdir(1) = cfg_dep('Get Pathnames: Directories (unique)', substruct('.','val', '{}',{15}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','up'));
matlabbatch{16}.spm.util.imcalc.expression = '(i2 + i3 + i4) .* i1';
matlabbatch{16}.spm.util.imcalc.var = struct('name', {}, 'value', {});
matlabbatch{16}.spm.util.imcalc.options.dmtx = 0;
matlabbatch{16}.spm.util.imcalc.options.mask = 0;
matlabbatch{16}.spm.util.imcalc.options.interp = -7;
matlabbatch{16}.spm.util.imcalc.options.dtype = 4;
matlabbatch{17}.spm.spatial.coreg.estimate.ref(1) = cfg_dep('Image Calculator: Imcalc Computed Image: Brain', substruct('.','val', '{}',{16}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{17}.spm.spatial.coreg.estimate.source(1) = cfg_dep('Image Calculator: Imcalc Computed Image: meanaufunct', substruct('.','val', '{}',{13}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{17}.spm.spatial.coreg.estimate.other(1) = cfg_dep('Slice Timing: Slice Timing Corr. Images (Sess 1)', substruct('.','val', '{}',{12}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{17}.spm.spatial.coreg.estimate.eoptions.cost_fun = 'nmi';
matlabbatch{17}.spm.spatial.coreg.estimate.eoptions.sep = [4 2];
matlabbatch{17}.spm.spatial.coreg.estimate.eoptions.tol = [0.02 0.02 0.02 0.001 0.001 0.001 0.01 0.01 0.01 0.001 0.001 0.001];
matlabbatch{17}.spm.spatial.coreg.estimate.eoptions.fwhm = [7 7];
matlabbatch{18}.spm.spatial.normalise.write.subj.def(1) = cfg_dep('Segment: Forward Deformations', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','fordef', '()',{':'}));
matlabbatch{18}.spm.spatial.normalise.write.subj.resample(1) = cfg_dep('Coregister: Estimate: Coregistered Images', substruct('.','val', '{}',{17}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','cfiles'));
matlabbatch{18}.spm.spatial.normalise.write.woptions.bb = [-78 -112 -70
                                                           78 76 85];
matlabbatch{18}.spm.spatial.normalise.write.woptions.vox = [2 2 2];
matlabbatch{18}.spm.spatial.normalise.write.woptions.interp = 4;
matlabbatch{19}.spm.spatial.smooth.data(1) = cfg_dep('Normalise: Write: Normalised Images (Subj 1)', substruct('.','val', '{}',{18}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{19}.spm.spatial.smooth.fwhm = [6 6 6];
matlabbatch{19}.spm.spatial.smooth.dtype = 0;
matlabbatch{19}.spm.spatial.smooth.im = 0;
matlabbatch{19}.spm.spatial.smooth.prefix = 's';
matlabbatch{20}.spm.spatial.normalise.write.subj.def(1) = cfg_dep('Segment: Forward Deformations', substruct('.','val', '{}',{14}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','fordef', '()',{':'}));
matlabbatch{20}.spm.spatial.normalise.write.subj.resample(1) = cfg_dep('Image Calculator: Imcalc Computed Image: Brain', substruct('.','val', '{}',{16}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{20}.spm.spatial.normalise.write.woptions.bb = [-78 -112 -70
                                                           78 76 85];
matlabbatch{20}.spm.spatial.normalise.write.woptions.vox = [1 1 1];
matlabbatch{20}.spm.spatial.normalise.write.woptions.interp = 4;
matlabbatch{21}.cfg_basicio.file_dir.dir_ops.cfg_cd.dir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{22}.cfg_basicio.file_dir.file_ops.file_move.files(1) = cfg_dep('Named File Selector: Functional Images(1) - Files', substruct('.','val', '{}',{2}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{22}.cfg_basicio.file_dir.file_ops.file_move.action.copyto(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.jobs = {'/Users/kasperla/Documents/code/matlab/smoothing_trunk/WAGAD/batches/batch_report_quality.m'};
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{1}{1}.indir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{1}{2}.instr = '00_raw';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{1}{3}.innifti(1) = cfg_dep('Move/Delete Files: Moved/Copied Files', substruct('.','val', '{}',{22}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{1}{4}.innifti(1) = cfg_dep('Named File Selector: Structural Image(1) - Files', substruct('.','val', '{}',{3}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{2}{1}.indir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{2}{2}.instr = '01_realigned';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{2}{3}.innifti(1) = cfg_dep('Slice Timing: Slice Timing Corr. Images (Sess 1)', substruct('.','val', '{}',{12}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{2}{4}.innifti(1) = cfg_dep('Named File Selector: Structural Image(1) - Files', substruct('.','val', '{}',{3}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{3}{1}.indir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{3}{2}.instr = '02_slice_timing_corrected';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{3}{3}.innifti(1) = cfg_dep('Realign & Unwarp: Unwarped Images (Sess 1)', substruct('.','val', '{}',{11}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','sess', '()',{1}, '.','uwrfiles'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{3}{4}.innifti(1) = cfg_dep('Named File Selector: Structural Image(1) - Files', substruct('.','val', '{}',{3}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{4}{1}.indir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{4}{2}.instr = '03_coregistered';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{4}{3}.innifti(1) = cfg_dep('Coregister: Estimate: Coregistered Images', substruct('.','val', '{}',{17}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','cfiles'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{4}{4}.innifti(1) = cfg_dep('Named File Selector: Structural Image(1) - Files', substruct('.','val', '{}',{3}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files', '{}',{1}));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{5}{1}.indir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{5}{2}.instr = '04_normalized';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{5}{3}.innifti(1) = cfg_dep('Normalise: Write: Normalised Images (Subj 1)', substruct('.','val', '{}',{18}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{5}{4}.innifti(1) = cfg_dep('Normalise: Write: Normalised Images (Subj 1)', substruct('.','val', '{}',{20}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{6}{1}.indir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{6}{2}.instr = '05_smoothed';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{6}{3}.innifti(1) = cfg_dep('Smooth: Smoothed Images', substruct('.','val', '{}',{19}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','files'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.inputs{6}{4}.innifti(1) = cfg_dep('Normalise: Write: Normalised Images (Subj 1)', substruct('.','val', '{}',{20}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('()',{1}, '.','files'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.save.savejobs.outstub = 'batch_report_quality_preproc_step';
matlabbatch{23}.cfg_basicio.run_ops.runjobs.save.savejobs.outdir(1) = cfg_dep('Make Directory: Make Directory ''report_preproc_quality''', substruct('.','val', '{}',{7}, '.','val', '{}',{1}, '.','val', '{}',{1}, '.','val', '{}',{1}), substruct('.','dir'));
matlabbatch{23}.cfg_basicio.run_ops.runjobs.missing = 'skip';
